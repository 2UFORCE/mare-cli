{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ComprehensionQuiz=_ref=>{let{questions,onQuizComplete}=_ref;const[currentQuestionIndex]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[isAnswered,setIsAnswered]=useState(false);const currentQuestion=questions[currentQuestionIndex];const handleAnswerClick=option=>{if(isAnswered)return;// Previne múltiplas respostas\nsetSelectedAnswer(option);setIsAnswered(true);};const getButtonColor=option=>{if(!isAnswered)return'#f0f0f0';// Cor padrão\nconst isCorrect=option===currentQuestion.resposta_correta;if(option===selectedAnswer){return isCorrect?'#d4edda':'#f8d7da';// Verde se correta, Vermelho se incorreta\n}if(isCorrect){return'#d4edda';// Mostra a correta em verde mesmo que não tenha sido a selecionada\n}return'#f0f0f0';// Cor padrão para as outras opções\n};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #eee',borderRadius:'8px',backgroundColor:'#fff',color:'#333'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:'center',marginBottom:'25px'},children:\"Teste de Compreens\\xE3o\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{fontSize:'1.2em'},children:currentQuestion.pergunta}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px'},children:currentQuestion.opcoes.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswerClick(option),disabled:isAnswered,style:{padding:'15px',border:'1px solid #ccc',borderRadius:'5px',backgroundColor:getButtonColor(option),cursor:isAnswered?'not-allowed':'pointer',fontSize:'1em',textAlign:'left',transition:'background-color 0.3s ease'},children:option},index))})]}),isAnswered&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'25px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:onQuizComplete,style:{padding:'10px 20px',fontSize:'1em'},children:\"Voltar \\xE0 Li\\xE7\\xE3o\"})})]});};export default ComprehensionQuiz;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ComprehensionQuiz","_ref","questions","onQuizComplete","currentQuestionIndex","selectedAnswer","setSelectedAnswer","isAnswered","setIsAnswered","currentQuestion","handleAnswerClick","option","getButtonColor","isCorrect","resposta_correta","style","padding","border","borderRadius","backgroundColor","color","children","textAlign","marginBottom","fontSize","pergunta","display","flexDirection","gap","opcoes","map","index","onClick","disabled","cursor","transition","marginTop"],"sources":["C:/PROJETOS/mare-cli/src/ComprehensionQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ComprehensionQuiz = ({ questions, onQuizComplete }) => {\n  const [currentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const handleAnswerClick = (option) => {\n    if (isAnswered) return; // Previne múltiplas respostas\n\n    setSelectedAnswer(option);\n    setIsAnswered(true);\n  };\n\n  const getButtonColor = (option) => {\n    if (!isAnswered) return '#f0f0f0'; // Cor padrão\n\n    const isCorrect = option === currentQuestion.resposta_correta;\n    if (option === selectedAnswer) {\n      return isCorrect ? '#d4edda' : '#f8d7da'; // Verde se correta, Vermelho se incorreta\n    }\n    if (isCorrect) {\n      return '#d4edda'; // Mostra a correta em verde mesmo que não tenha sido a selecionada\n    }\n    return '#f0f0f0'; // Cor padrão para as outras opções\n  };\n\n  return (\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', backgroundColor: '#fff', color: '#333' }}>\n      <h3 style={{ textAlign: 'center', marginBottom: '25px' }}>Teste de Compreensão</h3>\n      <div style={{ marginBottom: '20px' }}>\n        <h4 style={{ fontSize: '1.2em' }}>{currentQuestion.pergunta}</h4>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n          {currentQuestion.opcoes.map((option, index) => (\n            <button\n              key={index}\n              onClick={() => handleAnswerClick(option)}\n              disabled={isAnswered}\n              style={{\n                padding: '15px',\n                border: '1px solid #ccc',\n                borderRadius: '5px',\n                backgroundColor: getButtonColor(option),\n                cursor: isAnswered ? 'not-allowed' : 'pointer',\n                fontSize: '1em',\n                textAlign: 'left',\n                transition: 'background-color 0.3s ease'\n              }}\n            >\n              {option}\n            </button>\n          ))}\n        </div>\n      </div>\n      {isAnswered && (\n        <div style={{ textAlign: 'center', marginTop: '25px' }}>\n          <button onClick={onQuizComplete} style={{ padding: '10px 20px', fontSize: '1em' }}>\n            Voltar à Lição\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ComprehensionQuiz;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,SAAS,CAAEC,cAAe,CAAC,CAAAF,IAAA,CACtD,KAAM,CAACG,oBAAoB,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAC1C,KAAM,CAACU,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAc,eAAe,CAAGP,SAAS,CAACE,oBAAoB,CAAC,CAEvD,KAAM,CAAAM,iBAAiB,CAAIC,MAAM,EAAK,CACpC,GAAIJ,UAAU,CAAE,OAAQ;AAExBD,iBAAiB,CAACK,MAAM,CAAC,CACzBH,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAI,cAAc,CAAID,MAAM,EAAK,CACjC,GAAI,CAACJ,UAAU,CAAE,MAAO,SAAS,CAAE;AAEnC,KAAM,CAAAM,SAAS,CAAGF,MAAM,GAAKF,eAAe,CAACK,gBAAgB,CAC7D,GAAIH,MAAM,GAAKN,cAAc,CAAE,CAC7B,MAAO,CAAAQ,SAAS,CAAG,SAAS,CAAG,SAAS,CAAE;AAC5C,CACA,GAAIA,SAAS,CAAE,CACb,MAAO,SAAS,CAAE;AACpB,CACA,MAAO,SAAS,CAAE;AACpB,CAAC,CAED,mBACEd,KAAA,QAAKgB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,YAAY,CAAE,KAAK,CAAEC,eAAe,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAC,QAAA,eACrHxB,IAAA,OAAIkB,KAAK,CAAE,CAAEO,SAAS,CAAE,QAAQ,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAF,QAAA,CAAC,yBAAoB,CAAI,CAAC,cACnFtB,KAAA,QAAKgB,KAAK,CAAE,CAAEQ,YAAY,CAAE,MAAO,CAAE,CAAAF,QAAA,eACnCxB,IAAA,OAAIkB,KAAK,CAAE,CAAES,QAAQ,CAAE,OAAQ,CAAE,CAAAH,QAAA,CAAEZ,eAAe,CAACgB,QAAQ,CAAK,CAAC,cACjE5B,IAAA,QAAKkB,KAAK,CAAE,CAAEW,OAAO,CAAE,MAAM,CAAEC,aAAa,CAAE,QAAQ,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAAP,QAAA,CACnEZ,eAAe,CAACoB,MAAM,CAACC,GAAG,CAAC,CAACnB,MAAM,CAAEoB,KAAK,gBACxClC,IAAA,WAEEmC,OAAO,CAAEA,CAAA,GAAMtB,iBAAiB,CAACC,MAAM,CAAE,CACzCsB,QAAQ,CAAE1B,UAAW,CACrBQ,KAAK,CAAE,CACLC,OAAO,CAAE,MAAM,CACfC,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAE,KAAK,CACnBC,eAAe,CAAEP,cAAc,CAACD,MAAM,CAAC,CACvCuB,MAAM,CAAE3B,UAAU,CAAG,aAAa,CAAG,SAAS,CAC9CiB,QAAQ,CAAE,KAAK,CACfF,SAAS,CAAE,MAAM,CACjBa,UAAU,CAAE,4BACd,CAAE,CAAAd,QAAA,CAEDV,MAAM,EAdFoB,KAeC,CACT,CAAC,CACC,CAAC,EACH,CAAC,CACLxB,UAAU,eACTV,IAAA,QAAKkB,KAAK,CAAE,CAAEO,SAAS,CAAE,QAAQ,CAAEc,SAAS,CAAE,MAAO,CAAE,CAAAf,QAAA,cACrDxB,IAAA,WAAQmC,OAAO,CAAE7B,cAAe,CAACY,KAAK,CAAE,CAAEC,OAAO,CAAE,WAAW,CAAEQ,QAAQ,CAAE,KAAM,CAAE,CAAAH,QAAA,CAAC,yBAEnF,CAAQ,CAAC,CACN,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}